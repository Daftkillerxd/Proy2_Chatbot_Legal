from flask import Flask, request, jsonify
from openai import OpenAI
from flask_cors import CORS   # 游녣 nuevo
import os
from dotenv import load_dotenv

load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

app = Flask(__name__)

# 游녢 Ajusta los or칤genes a los que realmente usar치s:
# - En local (Vite): http://localhost:5173
# - En producci칩n (tu dominio de Render del frontend): https://tu-frontend.onrender.com
CORS(app, resources={
    r"/chat": {
        "origins": [
            "http://localhost:5173",
            "https://proy2-chatbot-legal-frontend.onrender.com"
        ]
    }
})

system_prompt = """Eres un asistente jur칤dico informativo para Per칰.
- Explica en espa침ol claro.
- Cita normas con art칤culo y nombre (ej.: Constituci칩n, art. 2).
- Advierte siempre: "no es asesoria legal, es una orientaci칩n".
- Si el usuario pide aperturar o reabrir carpeta fiscal, gu칤a con pasos y requisitos seg칰n el CPP y lineamientos del MP, sin inventar art칤culos.

Restricciones:
- Solamente vas a responder sobre temas de derechos civiles, en materia de herencia intestada.
- En caso recibas una pregunta de otro tema, responde: "no che".

Salida:
- Tu respuesta debe ser breve, tipo conversaci칩n de chat.
- Todas tus respuestas deben estar basadas en la Constituci칩n.
- Importante: indica el n칰mero de art칤culo o c칩digo de donde sale la respuesta seg칰n la Constituci칩n y, luego, a침ade tu conocimiento adicional.
"""

@app.route('/chat', methods=['POST', 'OPTIONS'])  # 游녣 OPTIONS para preflight
def chat():
    if request.method == 'OPTIONS':
        return ('', 204)

    data = request.json or {}
    user_msg = data.get('message', '')

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_msg}
        ]
    )

    return jsonify({"respuesta": response.choices[0].message.content})

if __name__ == "__main__":
    # En Render se usa gunicorn, pero para local est치 bien:
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 5000)), debug=True)
